
/*!
 * Lightbox for Bootstrap 5 v1.7.11 (https://trvswgnr.github.io/bs5-lightbox/)
 * Copyright 2022 Travis Aaron Wagner (https://github.com/trvswgnr/)
 * Licensed under MIT (https://github.com/trvswgnr/bs5-lightbox/blob/main/LICENSE)
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ src; }
});

;// CONCATENATED MODULE: external "bootstrap"
var external_bootstrap_namespaceObject = window["bootstrap"];
;// CONCATENATED MODULE: ./src/index.js
/**
 * Lightbox for Bootstrap 5
 *
 * @file Creates a modal with a lightbox carousel.
 * @module bs5-lightbox
 */

const bootstrap = {
  Modal: external_bootstrap_namespaceObject.Modal,
  Carousel: external_bootstrap_namespaceObject.Carousel
};

class Lightbox {
  constructor(el, options = {}) {
    this.hash = this.randomHash();
    this.settings = Object.assign(Object.assign(Object.assign({}, bootstrap.Modal.Default), bootstrap.Carousel.Default), {
      interval: false,
      target: '[data-toggle="lightbox"]',
      gallery: '',
      size: 'xl'
    });

    this.modalOptions = (() => this.setOptionsFromSettings(bootstrap.Modal.Default))();

    this.carouselOptions = (() => this.setOptionsFromSettings(bootstrap.Carousel.Default))();

    if (typeof el === 'string') {
      this.settings.target = el;
      el = document.querySelector(this.settings.target);
    }

    this.settings = Object.assign(Object.assign({}, this.settings), options);
    this.el = el;
    this.type = el.dataset.type || '';
    this.src = this.getSrc(el);
    this.sources = this.getGalleryItems();
    this.createCarousel();
    this.createModal();
  }

  show() {
    document.body.appendChild(this.modalElement);
    this.modal.show();
  }

  hide() {
    this.modal.hide();
  }

  setOptionsFromSettings(obj) {
    return Object.keys(obj).reduce((p, c) => Object.assign(p, {
      [c]: this.settings[c]
    }), {});
  }

  getSrc(el) {
    let src = el.dataset.src || el.dataset.remote || el.href || 'http://via.placeholder.com/1600x900';

    if (el.dataset.type === 'html') {
      return src;
    }

    if (!/\:\/\//.test(src)) {
      src = window.location.origin + src;
    }

    const url = new URL(src);

    if (el.dataset.footer || el.dataset.caption) {
      url.searchParams.set('caption', el.dataset.footer || el.dataset.caption);
    }

    return url.toString();
  }

  getGalleryItems() {
    let galleryTarget;

    if (this.settings.gallery) {
      if (Array.isArray(this.settings.gallery)) {
        return this.settings.gallery;
      }

      galleryTarget = this.settings.gallery;
    } else if (this.el.dataset.gallery) {
      galleryTarget = this.el.dataset.gallery;
    }

    const gallery = galleryTarget ? [...new Set(Array.from(document.querySelectorAll("[data-gallery=\"".concat(galleryTarget, "\"]")), v => "".concat(v.dataset.type ? v.dataset.type : '').concat(this.getSrc(v))))] : ["".concat(this.type ? this.type : '').concat(this.src)];
    return gallery;
  }

  getYoutubeId(src) {
    if (!src) return false;
    const matches = src.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/);
    return matches && matches[2].length === 11 ? matches[2] : false;
  }

  getInstagramEmbed(src) {
    if (/instagram/.test(src)) {
      src += /\/embed$/.test(src) ? '' : '/embed';
      return "<iframe src=\"".concat(src, "\" class=\"start-50 translate-middle-x\" style=\"max-width: 500px\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>");
    }
  }

  isEmbed(src) {
    const regex = new RegExp('(' + Lightbox.allowedEmbedTypes.join('|') + ')');
    const isEmbed = regex.test(src);
    const isImg = /\.(png|jpe?g|gif|svg|webp)/i.test(src) || this.el.dataset.type === 'image';
    return isEmbed || !isImg;
  }

  createCarousel() {
    const template = document.createElement('template');
    const types = Lightbox.allowedMediaTypes.join('|');
    const slidesHtml = this.sources.map((src, i) => {
      src = src.replace(/\/$/, '');
      const regex = new RegExp("^(".concat(types, ")"), 'i');
      const isHtml = /^html/.test(src);
      const isForcedImage = /^image/.test(src);

      if (regex.test(src)) {
        src = src.replace(regex, '');
      }

      let inner = "<img src=\"".concat(src, "\" class=\"d-block w-100 h-100 img-fluid\" style=\"z-index: 1; object-fit: contain;\" />");
      let attributes = '';
      const instagramEmbed = this.getInstagramEmbed(src);
      const youtubeId = this.getYoutubeId(src);

      if (this.isEmbed(src) && !isForcedImage) {
        if (youtubeId) {
          src = "https://www.youtube.com/embed/".concat(youtubeId);
          attributes = 'title="YouTube video player" frameborder="0" allow="accelerometer autoplay clipboard-write encrypted-media gyroscope picture-in-picture"';
        }

        inner = instagramEmbed || "<iframe src=\"".concat(src, "\" ").concat(attributes, " allowfullscreen></iframe>");
      }

      if (isHtml) {
        inner = src;
      }

      const spinner = "<div class=\"position-absolute top-50 start-50 translate-middle text-white\"><div class=\"spinner-border\" style=\"width: 3rem height: 3rem\" role=\"status\"></div></div>";
      const params = new URLSearchParams(src.split('?')[1]);
      let caption = '';

      if (params.get('caption')) {
        caption = "<p class=\"lightbox-caption m-0 p-2 text-center text-white small\"><em>".concat(params.get('caption'), "</em></p>");
      }

      return "\n\t\t\t\t<div class=\"carousel-item ".concat(!i ? 'active' : '', "\" style=\"min-height: 100px\">\n\t\t\t\t\t").concat(spinner, "\n\t\t\t\t\t<div class=\"ratio ratio-16x9\" style=\"background-color: #000;\">").concat(inner, "</div>\n\t\t\t\t\t").concat(caption, "\n\t\t\t\t</div>");
    }).join('');
    const controlsHtml = this.sources.length < 2 ? '' : "\n\t\t\t<button id=\"#lightboxCarousel-".concat(this.hash, "-prev\" class=\"carousel-control carousel-control-prev h-75 m-auto\" type=\"button\" data-bs-target=\"#lightboxCarousel-").concat(this.hash, "\" data-bs-slide=\"prev\">\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\">Previous</span>\n\t\t\t</button>\n\t\t\t<button id=\"#lightboxCarousel-").concat(this.hash, "-next\" class=\"carousel-control carousel-control-next h-75 m-auto\" type=\"button\" data-bs-target=\"#lightboxCarousel-").concat(this.hash, "\" data-bs-slide=\"next\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\">Next</span>\n\t\t\t</button>");
    let classes = 'lightbox-carousel carousel';

    if (this.settings.size === 'fullscreen') {
      classes += ' position-absolute w-100 translate-middle top-50 start-50';
    }

    const html = "\n\t\t\t<div id=\"lightboxCarousel-".concat(this.hash, "\" class=\"").concat(classes, "\" data-bs-ride=\"carousel\" data-bs-interval=\"").concat(this.carouselOptions.interval, "\">\n\t\t\t\t<div class=\"carousel-inner\">\n\t\t\t\t\t").concat(slidesHtml, "\n\t\t\t\t</div>\n\t\t\t\t").concat(controlsHtml, "\n\t\t\t</div>");
    template.innerHTML = html.trim();
    this.carouselElement = template.content.firstChild;
    const carouselOptions = Object.assign(Object.assign({}, this.carouselOptions), {
      keyboard: false
    });
    this.carousel = new bootstrap.Carousel(this.carouselElement, carouselOptions);
    const elSrc = this.type && this.type !== 'image' ? this.type + this.src : this.src;
    this.carousel.to(this.findGalleryItemIndex(this.sources, elSrc));

    if (this.carouselOptions.keyboard === true) {
      document.addEventListener('keydown', e => {
        if (e.code === 'ArrowLeft') {
          const prev = document.getElementById("#lightboxCarousel-".concat(this.hash, "-prev"));

          if (prev) {
            prev.click();
          }

          return false;
        }

        if (e.code === 'ArrowRight') {
          const next = document.getElementById("#lightboxCarousel-".concat(this.hash, "-next"));

          if (next) {
            next.click();
          }

          return false;
        }
      });
    }

    return this.carousel;
  }

  findGalleryItemIndex(haystack, needle) {
    let index = 0;

    for (const item of haystack) {
      if (item.includes(needle)) {
        return index;
      }

      index++;
    }

    return 0;
  }

  createModal() {
    const template = document.createElement('template');
    const btnInner = '<svg xmlns="http://www.w3.org/2000/svg" style="position: relative; top: -5px;" viewBox="0 0 16 16" fill="#fff"><path d="M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z"/></svg>';
    const html = "\n\t\t\t<div class=\"modal lightbox fade\" id=\"lightboxModal-".concat(this.hash, "\" tabindex=\"-1\" aria-hidden=\"true\">\n\t\t\t\t<div class=\"modal-dialog modal-dialog-centered modal-").concat(this.settings.size, "\">\n\t\t\t\t\t<div class=\"modal-content border-0 bg-transparent\">\n\t\t\t\t\t\t<div class=\"modal-body p-0\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close position-absolute top-0 end-0 p-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\" style=\"z-index: 2; background: none;\">").concat(btnInner, "</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>");
    template.innerHTML = html.trim();
    this.modalElement = template.content.firstChild;
    this.modalElement.querySelector('.modal-body').appendChild(this.carouselElement);
    this.modalElement.addEventListener('hidden.bs.modal', () => this.modalElement.remove());
    this.modalElement.querySelector('[data-bs-dismiss]').addEventListener('click', () => this.modal.hide());
    this.modal = new bootstrap.Modal(this.modalElement, this.modalOptions);
    return this.modal;
  }

  randomHash(length = 8) {
    return Array.from({
      length
    }, () => Math.floor(Math.random() * 36).toString(36)).join('');
  }

}

Lightbox.allowedEmbedTypes = ['embed', 'youtube', 'vimeo', 'instagram', 'url'];
Lightbox.allowedMediaTypes = [...Lightbox.allowedEmbedTypes, 'image', 'html'];
Lightbox.defaultSelector = '[data-toggle="lightbox"]';

Lightbox.initialize = function (e) {
  e.preventDefault();
  const lightbox = new Lightbox(this);
  lightbox.show();
};

document.querySelectorAll(Lightbox.defaultSelector).forEach(el => el.addEventListener('click', Lightbox.initialize));

if (typeof window !== 'undefined' && window.bootstrap) {
  window.bootstrap.Lightbox = Lightbox;
}

/* harmony default export */ var src = (Lightbox);
window.Bootstrap5Lightbox = __webpack_exports__["default"];
/******/ })()
;
//# sourceMappingURL=index.bundle.min.js.map